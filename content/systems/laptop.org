* My laptop
with its two cores and shared video memory

#+begin_src shell
  neofetch --stdout
#+end_src


| geir@the-laptop |              |                        |           |            |        |        |          |      |        |          |
| --------------- |              |                        |           |            |        |        |          |      |        |          |
| OS:             | NixOS        | 22.11.1705.b83e7f5a04a | (Raccoon) | x86_64     |        |        |          |      |        |          |
| Host:           | LENOVO       | LNVNB161216            |           |            |        |        |          |      |        |          |
| Kernel:         | 6.1.6        |                        |           |            |        |        |          |      |        |          |
| Uptime:         | 1            | day,                   | 7         | hours,     | 42     | mins   |          |      |        |          |
| Packages:       | 994          | (nix-system),          | 4793      | (nix-user) |        |        |          |      |        |          |
| Shell:          | bash         | 5.1.16                 |           |            |        |        |          |      |        |          |
| Resolution:     | 1920x1080    |                        |           |            |        |        |          |      |        |          |
| DE:             | GNOME        | 43.2                   | (Wayland) |            |        |        |          |      |        |          |
| WM:             | Mutter       |                        |           |            |        |        |          |      |        |          |
| WM              | Theme:       | Adwaita                |           |            |        |        |          |      |        |          |
| Theme:          | Adwaita-dark | [GTK2/3]               |           |            |        |        |          |      |        |          |
| Icons:          | Arc          | [GTK2/3]               |           |            |        |        |          |      |        |          |
| Terminal:       | emacs        |                        |           |            |        |        |          |      |        |          |
| CPU:            | AMD          | Ryzen                  | 3         | 3250U      | with   | Radeon | Graphics | (4)  | @      | 2.600GHz |
| GPU:            | AMD          | ATI                    | Radeon    | Vega       | Series | /      | Radeon   | Vega | Mobile | Series   |
| Memory:         | 5533MiB      | /                      | 5814MiB   |            |        |        |          |      |        |          |
|                 |              |                        |           |            |        |        |          |      |        |          |


* Nix configuration
#+begin_src nix
{ config, pkgs, ... }:

{
  imports =
    [ # Include the results of the hardware scan.
      ./hardware-configuration.nix
    ];

  # Bootloader.
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;
  boot.loader.efi.efiSysMountPoint = "/boot/efi";
  boot.kernelPackages = pkgs.linuxPackages_latest;
  
  networking.hostName = "the-laptop"; # Define your hostname.
  # networking.wireless.enable = true;  # Enables wireless support via wpa_supplicant.

  # Configure network proxy if necessary
  # networking.proxy.default = "http://user:password@proxy:port/";
  # networking.proxy.noProxy = "127.0.0.1,localhost,internal.domain";

  # Enable networking
  networking.networkmanager.enable = true;

  # Set your time zone.
  time.timeZone = "Europe/Oslo";

  # Select internationalisation properties.
  i18n.defaultLocale = "en_US.UTF-8";

  # Enable the X11 windowing system.
  services.xserver.enable = true;

  # Enable the GNOME Desktop Environment.
  services.xserver.displayManager.gdm.enable = true;
  services.xserver.desktopManager.gnome.enable = true;

  # Configure keymap in X11
  services.xserver = {
    layout = "no";
    xkbVariant = "";
  };

  # Configure console keymap
  console.keyMap = "no";

  # Enable CUPS to print documents.
  services.printing.enable = true;

  # Enable sound with pipewire.
  sound.enable = true;
  hardware.pulseaudio.enable = false;
  security.rtkit.enable = true;
  services.pipewire = {
    enable = true;
    alsa.enable = true;
    alsa.support32Bit = true;
    pulse.enable = true;
    # If you want to use JACK applications, uncomment this
    #jack.enable = true;

    # use the example session manager (no others are packaged yet so this is enabled by default,
    # no need to redefine it in your config for now)
    #media-session.enable = true;
  };

  # Enable touchpad support (enabled default in most desktopManager).
  # services.xserver.libinput.enable = true;

  # Define a user account. Don't forget to set a password with ‘passwd’.
  users.users.geir = {
    isNormalUser = true;
    description = "Geir Okkenhaug Jerstad";
    extraGroups = [ "networkmanager" "wheel" ];
    packages = with pkgs; [
      # Browsers
      firefox google-chrome nyxt
      # Fonts
      fira-code fira-mono fira-code-symbols meslo-lgs-nf
      # Gnome
      gnome.gnome-tweaks
      arc-icon-theme beauty-line-icon-theme
      # tools
      htop glances
      # Emacs
      emacsPackages.vterm
      # Coding
      mitscheme
      racket
      guile
      python3Full
      # TexLive
      texlive.combined.scheme-full
    ];
  };

  # Allow unfree packages
  nixpkgs.config.allowUnfree = true;

  # List packages installed in system profile. To search, run:
  # $ nix search wget
  environment.systemPackages = with pkgs; [
     neovim emacs git
     wget curl
     neofetch inxi mlocate
     # language servers
     rnix-lsp
     gopls go
  ];

  # Turn on some experimental features for nix
  
  nix.settings.experimental-features = [ "nix-command" ];
  
  # Some programs need SUID wrappers, can be configured further or are
  # started in user sessions.
  # programs.mtr.enable = true;
  # programs.gnupg.agent = {
  #   enable = true;
  #   enableSSHSupport = true;
  # };

  # List services that you want to enable:

  # Enable the OpenSSH daemon.
  services.openssh.enable = true;

  # Open ports in the firewall.
  # networking.firewall.allowedTCPPorts = [ ... ];
  # networking.firewall.allowedUDPPorts = [ ... ];
  # Or disable the firewall altogether.
  # networking.firewall.enable = false;

  # This value determines the NixOS release from which the default
  # settings for stateful data, like file locations and database versions
  # on your system were taken. It‘s perfectly fine and recommended to leave
  # this value at the release version of the first install of this system.
  # Before changing this value read the documentation for this option
  # (e.g. man configuration.nix or on https://nixos.org/nixos/options.html).
  system.stateVersion = "22.11"; # Did you read the comment?

}

#+end_src
